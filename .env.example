# TCG Card Printer - Environment Configuration Example
# Copy this file to .env and customize values for your deployment
# This file demonstrates all available configuration options

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Directories (use absolute paths or Docker container paths)
# Default: Relative to application directory
TCG_WATCH_FOLDER=/app/tcg_cards_input
TCG_PROCESSED_FOLDER=/app/processed
TCG_LOG_DIR=/app/logs

# Image processing settings
# DPI must be between 150-600 for optimal quality
TCG_DPI=300
TCG_JPEG_QUALITY=95

# Processing behavior
# Auto-delete original files after successful printing
TCG_AUTO_DELETE=false
TCG_OPTIMIZE_FOR_PRINT=true

# =============================================================================
# PRINTER CONFIGURATION
# =============================================================================

# Primary printer settings
# Update to match your printer's name in CUPS
TCG_PRINTER_NAME=Canon_G3070_series
TCG_MEDIA_TYPE=Cardstock
TCG_PAPER_SIZE=Custom.2.5x3.5in

# =============================================================================
# NETWORK PRINTING CONFIGURATION
# =============================================================================

# Enable network printing (alternative to CUPS socket mounting)
# Set to 'true' for distributed deployments or when CUPS socket is unavailable
TCG_USE_NETWORK_PRINTING=false

# CUPS server configuration (when network printing is enabled)
TCG_CUPS_SERVER_HOST=localhost
TCG_CUPS_SERVER_PORT=631
TCG_CUPS_SERVER_ENCRYPTION=false

# CUPS authentication (optional, only if required by server)
# TCG_CUPS_SERVER_USERNAME=
# TCG_CUPS_SERVER_PASSWORD=

# IPP (Internet Printing Protocol) configuration
# Alternative to CUPS server for direct printer communication
# Example: ipp://printer.local:631/printers/Canon_G3070
# TCG_IPP_PRINTER_URI=

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
TCG_LOG_LEVEL=INFO

# Health check configuration
TCG_HEALTH_CHECK_ENABLED=true
TCG_HEALTH_CHECK_INTERVAL=30
TCG_HEALTH_CHECK_TIMEOUT=10

# Resource monitoring
TCG_ENABLE_RESOURCE_MONITORING=false
TCG_MAX_MEMORY_MB=512
TCG_MAX_CPU_PERCENT=80

# =============================================================================
# DOCKER COMPOSE VARIABLES
# =============================================================================

# CUPS server settings (for docker-compose.network.yml)
CUPS_SERVER_HOST=cups-server
CUPS_SERVER_PORT=631
CUPS_SERVER_ENCRYPTION=false

# Optional CUPS authentication
# CUPS_USERNAME=
# CUPS_PASSWORD=

# Printer configuration for compose
PRINTER_NAME=Canon_G3070_series
AUTO_DELETE=false
DPI=300
MEDIA_TYPE=Cardstock
PAPER_SIZE=Custom.2.5x3.5in
LOG_LEVEL=INFO
JPEG_QUALITY=95

# IPP printer URI for network printing
# IPP_PRINTER_URI=ipp://192.168.1.100:631/printers/Canon_G3070

# =============================================================================
# DEVELOPMENT AND TESTING
# =============================================================================

# Development mode settings
# Enable for additional debugging and verbose output
DEVELOPMENT_MODE=false

# Test printer (for development)
# Set to true to enable test prints without actual printing
TEST_MODE=false

# Mock printer for testing
# Set to true to simulate printer operations
MOCK_PRINTER=false

# =============================================================================
# PRODUCTION DEPLOYMENT SETTINGS
# =============================================================================

# Production security settings
PRODUCTION_MODE=false

# Container resource limits (for production)
CONTAINER_MEMORY_LIMIT=512m
CONTAINER_CPU_LIMIT=1

# Production logging
PRODUCTION_LOG_RETENTION_DAYS=30
PRODUCTION_LOG_MAX_SIZE=100m

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Enable security hardening features
ENABLE_SECURITY_HARDENING=true

# Container security options
RUN_AS_NON_ROOT=true
DROP_ALL_CAPABILITIES=true
NO_NEW_PRIVILEGES=true

# File permissions
FILE_OWNER_UID=1000
FILE_OWNER_GID=1000

# =============================================================================
# ADVANCED NETWORK SETTINGS
# =============================================================================

# Custom Docker network (optional)
# DOCKER_NETWORK=printing-network

# Network subnet for isolated printing network
# NETWORK_SUBNET=172.20.0.0/16

# Custom DNS servers (optional)
# DNS_SERVERS=8.8.8.8,1.1.1.1

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================

# Backup configuration
ENABLE_BACKUP=false
BACKUP_SCHEDULE=daily
BACKUP_RETENTION_DAYS=7

# Backup destinations
# BACKUP_S3_BUCKET=
# BACKUP_LOCAL_PATH=/backup

# =============================================================================
# INTEGRATION SETTINGS
# =============================================================================

# Webhook notifications (optional)
# WEBHOOK_URL=
# WEBHOOK_ON_SUCCESS=true
# WEBHOOK_ON_ERROR=true

# Email notifications (optional)
# SMTP_HOST=
# SMTP_PORT=587
# SMTP_USERNAME=
# SMTP_PASSWORD=
# NOTIFICATION_EMAIL=

# Slack integration (optional)
# SLACK_WEBHOOK_URL=
# SLACK_CHANNEL=#printing

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Image processing threads
# Set to number of CPU cores for optimal performance
PROCESSING_THREADS=2

# Queue processing settings
MAX_QUEUE_SIZE=100
PROCESSING_TIMEOUT=300

# Memory usage optimization
ENABLE_MEMORY_OPTIMIZATION=true
MAX_IMAGE_SIZE_MB=50

# =============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# =============================================================================

# Environment identifier
ENVIRONMENT=production

# Stage-specific settings
# Uncomment and customize based on your deployment stage

# Development environment
# ENVIRONMENT=development
# TCG_LOG_LEVEL=DEBUG
# TCG_HEALTH_CHECK_INTERVAL=10
# ENABLE_BACKUP=false

# Staging environment
# ENVIRONMENT=staging
# TCG_LOG_LEVEL=INFO
# ENABLE_BACKUP=true
# BACKUP_SCHEDULE=hourly

# Production environment
# ENVIRONMENT=production
# TCG_LOG_LEVEL=WARNING
# ENABLE_BACKUP=true
# BACKUP_SCHEDULE=daily
# PRODUCTION_MODE=true

# =============================================================================
# NOTES AND BEST PRACTICES
# =============================================================================

# Security Notes:
# 1. Never commit actual passwords or secrets to version control
# 2. Use strong passwords for CUPS authentication
# 3. Enable TLS/SSL for network printing in production
# 4. Regularly update container images for security patches
# 5. Monitor logs for suspicious activity

# Performance Notes:
# 1. Adjust DPI based on print quality requirements vs. processing time
# 2. Monitor memory usage and adjust limits accordingly
# 3. Use SSD storage for better I/O performance
# 4. Consider network latency for remote printing setups

# Deployment Notes:
# 1. Test thoroughly in staging environment before production
# 2. Have backup and recovery procedures in place
# 3. Monitor disk space for log and processed file storage
# 4. Configure log rotation to prevent disk space issues
# 5. Set up monitoring and alerting for print failures

# Troubleshooting:
# 1. Enable DEBUG logging for troubleshooting issues
# 2. Check CUPS connectivity with health checks
# 3. Verify file permissions for volume mounts
# 4. Monitor container resource usage
# 5. Check network connectivity for remote printing